// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview AI moderation tool for detecting spam and inappropriate content.
 *
 * - moderateContent - A function that moderates content and flags it if necessary.
 * - ModerateContentInput - The input type for the moderateContent function.
 * - ModerateContentOutput - The return type for the moderateContent function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ModerateContentInputSchema = z.object({
  text: z.string().describe('The text content to moderate.'),
});
export type ModerateContentInput = z.infer<typeof ModerateContentInputSchema>;

const ModerateContentOutputSchema = z.object({
  isFlagged: z.boolean().describe('Whether the content is flagged as spam or inappropriate.'),
  reason: z.string().describe('The reason why the content was flagged, if applicable.'),
});
export type ModerateContentOutput = z.infer<typeof ModerateContentOutputSchema>;

export async function moderateContent(input: ModerateContentInput): Promise<ModerateContentOutput> {
  return moderateContentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'moderateContentPrompt',
  input: {schema: ModerateContentInputSchema},
  output: {schema: ModerateContentOutputSchema},
  prompt: `You are an AI content moderator responsible for identifying spam and inappropriate content.

  Analyze the following text and determine if it should be flagged based on the following criteria:

  - Spam: Unsolicited advertisements, repetitive posts, or irrelevant links.
  - Inappropriate Content: Hate speech, harassment, offensive language, or any content that violates community guidelines.

  Text: {{{text}}}

  Respond with a JSON object indicating whether the content should be flagged and the reason if applicable.
`,
});

const moderateContentFlow = ai.defineFlow(
  {
    name: 'moderateContentFlow',
    inputSchema: ModerateContentInputSchema,
    outputSchema: ModerateContentOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
